package com.spider.entity;

// Generated 2015-7-21 10:41:12 by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.spider.domain.GamingCompany;
import org.apache.commons.lang3.StringUtils;

/**
 * HadOdds generated by hbm2java
 */
@Entity
@Table(name = "hhad_odds")
public class HdcOdds implements java.io.Serializable {

    private static final long serialVersionUID = -5234128970474345447L;

    private Long id;

    private String gamingCompany = "";

    private String oddsOne = "";

    private String handicapLine = "";

    private String oddsTwo = "";

    private Date updateTime = new Date();

    private String oddsUpdateTime = "";

    private String state = "";

    private String score = "";

    private Long win310Id;

    private String durationTime = "";
    private Integer homeRedCard = 0;

    private Integer awayRedCard = 0;
    private Integer europeId;

    @Column(name = "EUROPE_ID")
    public Integer getEuropeId() {

        return europeId;
    }

    public void setEuropeId(Integer europeId) {

        this.europeId = europeId;
    }
    @Column(name = "HOME_RED_CARD")
    public Integer getHomeRedCard() {

        return homeRedCard;
    }

    public void setHomeRedCard(Integer homeRedCard) {

        this.homeRedCard = homeRedCard;
    }

    @Column(name = "AWAY_RED_CARD")
    public Integer getAwayRedCard() {

        return awayRedCard;
    }

    public void setAwayRedCard(Integer awayRedCard) {

        this.awayRedCard = awayRedCard;
    }
    public void setDurationTime(String durationTime) {

        if (StringUtils.isBlank(durationTime)) {
            this.durationTime = "";
            return;
        }
        this.durationTime = durationTime;

    }

    @Column(name = "DURATION_TIME",  length = 5)
    public String getDurationTime() {

        return durationTime;
    }

    @Column(name = "WIN310_ID", nullable = false)
    public Long getWin310Id() {

        return win310Id;
    }

    public void setWin310Id(Long win310Id) {

        this.win310Id = win310Id;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "ID", unique = true, nullable = false)
    public Long getId() {

        return this.id;
    }

    public void setId(Long id) {

        this.id = id;
    }

    @Column(name = "GAMING_COMPANY", nullable = false, length = 50)
    public String getGamingCompany() {

        return this.gamingCompany;
    }

    public void setGamingCompany(String gamingCompany) {

        this.gamingCompany = gamingCompany;
    }

    @Column(name = "ODDS_ONE", nullable = false, length = 5)
    public String getOddsOne() {

        return this.oddsOne;
    }

    public void setOddsOne(String oddsOne) {

        this.oddsOne = oddsOne;
    }

    @Column(name = "HANDICAP_LINE", nullable = false, length = 10)
    public String getHandicapLine() {

        return this.handicapLine;
    }

    public void setHandicapLine(String handicapLine) {

        this.handicapLine = handicapLine;
    }

    @Column(name = "ODDS_TWO", nullable = false, length = 5)
    public String getOddsTwo() {

        return this.oddsTwo;
    }

    public void setOddsTwo(String oddsTwo) {

        this.oddsTwo = oddsTwo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "UPDATE_TIME", length = 19)
    public Date getUpdateTime() {

        return this.updateTime;
    }

    public void setUpdateTime(Date updateTime) {

        this.updateTime = updateTime;
    }

    @Column(name = "ODDS_UPDATE_TIME", nullable = false, length = 20)
    public String getOddsUpdateTime() {

        return this.oddsUpdateTime;
    }

    public void setOddsUpdateTime(String oddsUpdateTime) {

        this.oddsUpdateTime = oddsUpdateTime;
    }

    @Column(name = "STATE", nullable = false, length = 2)
    public String getState() {

        return state;
    }

    public void setState(String state) {

        this.state = state;
    }

    @Column(name = "SCORE", nullable = false, length = 2)
    public String getScore() {

        return score;
    }

    public void setScore(String score) {

        this.score = score;
    }

    public HdcOdds from(HdcOddsHistory hhadOddsHistory) {

        this.win310Id = hhadOddsHistory.getWin310Id();
        this.gamingCompany = hhadOddsHistory.getGamingCompany();
        this.oddsOne = hhadOddsHistory.getOddsOne();
        this.handicapLine = hhadOddsHistory.getHandicapLine();
        this.oddsTwo = hhadOddsHistory.getOddsTwo();
        this.updateTime = hhadOddsHistory.getUpdateTime();
        this.oddsUpdateTime = hhadOddsHistory.getOddsUpdateTime();
        this.state = hhadOddsHistory.getState();
        this.score = hhadOddsHistory.getScore();
        this.durationTime = hhadOddsHistory.getDurationTime();
        this.homeRedCard = hhadOddsHistory.getHomeRedCard();
        this.awayRedCard = hhadOddsHistory.getAwayRedCard();
        this.europeId = hhadOddsHistory.getEuropeId();
        return this;
    }

    @Override
    public boolean equals(Object o) {

        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        HdcOdds hdcOdds = (HdcOdds) o;

        if (gamingCompany != null ? !gamingCompany.equals(hdcOdds.gamingCompany) : hdcOdds.gamingCompany != null)
            return false;
        if (oddsOne != null ? !oddsOne.equals(hdcOdds.oddsOne) : hdcOdds.oddsOne != null) return false;
        if (handicapLine != null ? !handicapLine.equals(hdcOdds.handicapLine) : hdcOdds.handicapLine != null)
            return false;
        if (oddsTwo != null ? !oddsTwo.equals(hdcOdds.oddsTwo) : hdcOdds.oddsTwo != null) return false;
        if (oddsUpdateTime != null ? !oddsUpdateTime.equals(hdcOdds.oddsUpdateTime) : hdcOdds.oddsUpdateTime != null)
            return false;
        if (state != null ? !state.equals(hdcOdds.state) : hdcOdds.state != null) return false;
        if (score != null ? !score.equals(hdcOdds.score) : hdcOdds.score != null) return false;
        if (win310Id != null ? !win310Id.equals(hdcOdds.win310Id) : hdcOdds.win310Id != null) return false;
        if (durationTime != null ? !durationTime.equals(hdcOdds.durationTime) : hdcOdds.durationTime != null)
            return false;
        if (homeRedCard != null ? !homeRedCard.equals(hdcOdds.homeRedCard) : hdcOdds.homeRedCard != null) return false;
        if (europeId != null ? !europeId.equals(hdcOdds.europeId) : hdcOdds.europeId != null) return false;
        return !(awayRedCard != null ? !awayRedCard.equals(hdcOdds.awayRedCard) : hdcOdds.awayRedCard != null);

    }

    @Override
    public int hashCode() {

        int result = gamingCompany != null ? gamingCompany.hashCode() : 0;
        result = 31 * result + (oddsOne != null ? oddsOne.hashCode() : 0);
        result = 31 * result + (handicapLine != null ? handicapLine.hashCode() : 0);
        result = 31 * result + (oddsTwo != null ? oddsTwo.hashCode() : 0);
        result = 31 * result + (updateTime != null ? updateTime.hashCode() : 0);
        result = 31 * result + (oddsUpdateTime != null ? oddsUpdateTime.hashCode() : 0);
        result = 31 * result + (state != null ? state.hashCode() : 0);
        result = 31 * result + (score != null ? score.hashCode() : 0);
        result = 31 * result + (win310Id != null ? win310Id.hashCode() : 0);
        result = 31 * result + (durationTime != null ? durationTime.hashCode() : 0);
        result = 31 * result + (homeRedCard != null ? homeRedCard.hashCode() : 0);
        result = 31 * result + (awayRedCard != null ? awayRedCard.hashCode() : 0);
        return result;
    }
}
